@model PageCustomerViewModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    ViewData["Title"] = "Customers";
}

<div class="container mt-4">
    <!-- Header and Add button -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0">@ViewData["Title"]</h1>
        <a asp-action="Create" class="btn btn-success">
            <i class="bi bi-plus-circle"></i> Add New Customer
        </a>
    </div>

    <!-- Filter form -->
    <form asp-action="Index" method="get" class="mb-4">
        <div class="row g-2">
            <div class="col-md-4">
                <input type="text" name="nameFilter" value="@Model.NameFilter"
                       placeholder="Search by Name" class="form-control" />
            </div>
            <div class="col-md-4">
                <input type="text" name="vatFilter" value="@Model.VatFilter"
                       placeholder="Search by VAT Number" class="form-control" />
            </div>
            <div class="col-md-4 d-grid d-md-flex gap-2">
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-search"></i> Filter
                </button>
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="bi bi-x-circle"></i> Clear
                </a>
            </div>
        </div>
    </form>

    <!-- Table -->
    <div class="table-responsive">
        <table class="table table-hover align-middle">
            <thead class="table-light">
                <tr>
                    <th>
                        <a class="text-decoration-none" asp-action="Index"
                           asp-route-page="@Model.PageNumber"
                           asp-route-pageSize="@Model.PageSize"
                           asp-route-sortColumn="Name"
                           asp-route-sortDirection="@(Model.SortColumn=="Name" && Model.SortDirection=="asc" ? "desc" : "asc")">
                            @Html.DisplayNameFor(m => m.Customers.First().Name)
                            @if (Model.SortColumn == "Name")
                            {
                                <span>@(Model.SortDirection == "asc" ? "↑" : "↓")</span>
                            }
                        </a>
                    </th>
                    <th>
                        <a class="text-decoration-none" asp-action="Index"
                           asp-route-page="@Model.PageNumber"
                           asp-route-pageSize="@Model.PageSize"
                           asp-route-sortColumn="PhoneNumber"
                           asp-route-sortDirection="@(Model.SortColumn=="PhoneNumber" && Model.SortDirection=="asc" ? "desc" : "asc")">
                            @Html.DisplayNameFor(m => m.Customers.First().PhoneNumber)
                            @if (Model.SortColumn == "PhoneNumber")
                            {
                                <span>@(Model.SortDirection == "asc" ? "↑" : "↓")</span>
                            }
                        </a>
                    </th>
                    <th>
                        <a class="text-decoration-none" asp-action="Index"
                           asp-route-page="@Model.PageNumber"
                           asp-route-pageSize="@Model.PageSize"
                           asp-route-sortColumn="ContactName"
                           asp-route-sortDirection="@(Model.SortColumn=="ContactName" && Model.SortDirection=="asc" ? "desc" : "asc")">
                            @Html.DisplayNameFor(m => m.Customers.First().ContactName)
                            @if (Model.SortColumn == "ContactName")
                            {
                                <span>@(Model.SortDirection == "asc" ? "↑" : "↓")</span>
                            }
                        </a>
                    </th>
                    <th>
                        <a class="text-decoration-none" asp-action="Index"
                           asp-route-page="@Model.PageNumber"
                           asp-route-pageSize="@Model.PageSize"
                           asp-route-sortColumn="ContactEmail"
                           asp-route-sortDirection="@(Model.SortColumn=="ContactEmail" && Model.SortDirection=="asc" ? "desc" : "asc")">
                            @Html.DisplayNameFor(m => m.Customers.First().ContactEmail)
                            @if (Model.SortColumn == "ContactEmail")
                            {
                                <span>@(Model.SortDirection == "asc" ? "↑" : "↓")</span>
                            }
                        </a>
                    </th>
                    <th>
                        <a class="text-decoration-none" asp-action="Index"
                           asp-route-page="@Model.PageNumber"
                           asp-route-pageSize="@Model.PageSize"
                           asp-route-sortColumn="VATNumber"
                           asp-route-sortDirection="@(Model.SortColumn=="VATNumber" && Model.SortDirection=="asc" ? "desc" : "asc")">
                            @Html.DisplayNameFor(m => m.Customers.First().VATNumber)
                            @if (Model.SortColumn == "VATNumber")
                            {
                                <span>@(Model.SortDirection == "asc" ? "↑" : "↓")</span>
                            }
                        </a>
                    </th>
                    <th>
                        <a class="text-decoration-none" asp-action="Index"
                           asp-route-page="@Model.PageNumber"
                           asp-route-pageSize="@Model.PageSize"
                           asp-route-sortColumn="Address"
                           asp-route-sortDirection="@(Model.SortColumn=="Address" && Model.SortDirection=="asc" ? "desc" : "asc")">
                            Address
                            @if (Model.SortColumn == "Address")
                            {
                                <span>@(Model.SortDirection == "asc" ? "↑" : "↓")</span>
                            }
                        </a>
                    </th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var c in Model.Customers)
                {
                    <tr>
                        <td>@c.Name</td>
                        <td>@c.PhoneNumber</td>
                        <td>@c.ContactName</td>
                        <td class="@(c.IsVerified ? "" : "text-danger")">
                            @c.ContactEmail
                        </td>
                        <td>@c.VATNumber</td>
                        <td>@c.FullAddress</td>
                        <td>
                            <div class="btn-group btn-group-sm" role="group">
                                <!--Edit button-->
                                <form asp-action="Edit" asp-route-id="@c.CustomerID" method="get">
                                    <button type="submit" class="btn btn-outline-primary" title="Edit">
                                        <i class="bi bi-pencil"></i>
                                    </button>
                                </form>
                                <!-- Delete button-->
                                <form asp-action="Delete" asp-route-id="@c.CustomerID" class="delete-form" method="post" data-name="@c.Name">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-outline-danger" title="Delete">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </form>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    @{
        var totalPages = Model.TotalPages;
        var currentPage = Model.PageNumber;
    }

    <nav aria-label="Customer pagination" class="mt-3">
        <ul class="pagination justify-content-center">

            <!-- Previous button -->
            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                <a class="page-link"
                   asp-action="Index"
                   asp-route-page="@(currentPage - 1)"
                   asp-route-pageSize="@Model.PageSize"
                   asp-route-sortColumn="@Model.SortColumn"
                   asp-route-sortDirection="@Model.SortDirection">
                    <i class="bi bi-chevron-left"></i> Prev
                </a>
            </li>

            <!-- Page numbers (show max 5 around current page) -->
            @{
                var startPage = Math.Max(1, currentPage - 2);
                var endPage = Math.Min(totalPages, currentPage + 2);

                for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link"
                           asp-action="Index"
                           asp-route-page="@i"
                           asp-route-pageSize="@Model.PageSize"
                           asp-route-sortColumn="@Model.SortColumn"
                           asp-route-sortDirection="@Model.SortDirection">
                            @i
                        </a>
                    </li>
                }
            }

            <!-- Next button -->
            <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                <a class="page-link"
                   asp-action="Index"
                   asp-route-page="@(currentPage + 1)"
                   asp-route-pageSize="@Model.PageSize"
                   asp-route-sortColumn="@Model.SortColumn"
                   asp-route-sortDirection="@Model.SortDirection">
                    Next <i class="bi bi-chevron-right"></i>
                </a>
            </li>
        </ul>

        <!-- Page info -->
        <div class="text-center mt-2 text-muted">
            Page <strong>@currentPage</strong> of <strong>@totalPages</strong>
            (Total records: @Model.TotalCount)
        </div>
    </nav>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Attach to all Delete forms
            $('.delete-form').submit(function(e) {
                e.preventDefault(); // stop immediate submit
                var form = $(this);
                var customerName = form.data('name');

                Swal.fire({
                    title: `Are you sure you want to delete ${customerName}?`,
                    text: "This action cannot be undone!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        form.off('submit'); 
                        form.submit();       // submit the form
                    }
                });
            });
        });
    </script>
}
